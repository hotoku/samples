{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.37623335, 0.76624185, 0.27605005, 0.23888888, 0.53073015,\n",
       "        0.42632673, 0.09652969, 0.11167241, 0.71013274, 0.93271419],\n",
       "       [0.39418398, 0.5839546 , 0.89146086, 0.07458861, 0.56072415,\n",
       "        0.02965622, 0.73391873, 0.53756355, 0.08964997, 0.07127906],\n",
       "       [0.87262463, 0.67277832, 0.05612294, 0.40882811, 0.91961964,\n",
       "        0.25792059, 0.67746635, 0.80206833, 0.4804725 , 0.10029884],\n",
       "       [0.89913059, 0.72174737, 0.06317888, 0.7654839 , 0.16324252,\n",
       "        0.40625799, 0.63586352, 0.94873581, 0.03904417, 0.14273259],\n",
       "       [0.04271789, 0.91102514, 0.08608189, 0.1224526 , 0.23056328,\n",
       "        0.83915945, 0.47597158, 0.18228794, 0.4298385 , 0.40251661],\n",
       "       [0.70633321, 0.20047124, 0.30547473, 0.34711283, 0.60335487,\n",
       "        0.03830361, 0.8919642 , 0.89989913, 0.09205808, 0.35493937],\n",
       "       [0.56177136, 0.80753401, 0.32186994, 0.73844699, 0.74314265,\n",
       "        0.71382283, 0.4971471 , 0.43105062, 0.20146122, 0.11502254],\n",
       "       [0.36763198, 0.94162906, 0.61186855, 0.95715821, 0.65437512,\n",
       "        0.9976173 , 0.62955319, 0.96970125, 0.2149935 , 0.53296322],\n",
       "       [0.29890018, 0.56532793, 0.5322583 , 0.38232787, 0.0540227 ,\n",
       "        0.14039274, 0.90829999, 0.70307033, 0.5010477 , 0.31629286],\n",
       "       [0.64272558, 0.31723525, 0.14433938, 0.81867048, 0.20991197,\n",
       "        0.28053857, 0.1775834 , 0.48060897, 0.27131964, 0.61895594]])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array(np.random.rand(100)).reshape(10,10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[0.3663548 , 0.79915551, 0.39691208],\n",
       "        [0.56057353, 0.02167742, 0.00302449],\n",
       "        [0.62936468, 0.94135091, 0.21015063]],\n",
       "\n",
       "       [[0.17441211, 0.17036117, 0.04410333],\n",
       "        [0.68478365, 0.75029309, 0.64763273],\n",
       "        [0.90400698, 0.31027284, 0.72023477]],\n",
       "\n",
       "       [[0.03634053, 0.92992746, 0.71381159],\n",
       "        [0.02308217, 0.35062527, 0.74908059],\n",
       "        [0.54146725, 0.32312654, 0.60726819]]])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array(np.random.rand(27)).reshape(3,3,3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = np.array([[1,2,3], [3,4,5]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.73734326, 0.9380736 , 0.51434355],\n",
       "       [0.46515053, 0.87303249, 0.55110056]])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array(np.random.rand(6)).reshape(x.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = np.array(np.random.rand(10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "z = np.where(y < .5, 1, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.49413172 0.98921271 0.85419807 0.12662811 0.66026174 0.8707139\n",
      " 0.09210433 0.75951286 0.59388937 0.82780548]\n",
      "[1 0 0 1 0 0 1 0 0 0]\n"
     ]
    }
   ],
   "source": [
    "print(y)\n",
    "print(z)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
